# EKF Configuration for Robot Localization
# This fuses wheel odometry with IMU data for drift-free localization

ekf_filter_node:
  ros__parameters:
    # Basic EKF settings - Optimized for real-time sensor fusion
    frequency: 50.0                    # Match wheel odometry publish rate (50 Hz)
    sensor_timeout: 0.1                # 100ms timeout for sensor data
    two_d_mode: true                   # 2D robot (no flying)
    
    # Time synchronization settings
    predict_to_current_time: true      # Predict to current time for better sync
    smooth_lagged_data: true           # Smooth out-of-order sensor data
    
    # Map frame settings  
    map_frame: map
    odom_frame: odom  
    base_link_frame: base_footprint
    world_frame: odom                  # Start with odom frame
    
    # Transform settings - ENABLE TF PUBLISHING
    publish_tf: true                   # Robot_localization will publish odomâ†’base_footprint TF
    transform_time_offset: 0.0
    transform_timeout: 0.0
    print_diagnostics: true            # Enable debug output
    debug: false
    
    # Initial estimate covariance
    initial_estimate_covariance: [1e-9, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                  0,    1e-9, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                  0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                  0,    0,    0,    1e-9, 0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                  0,    0,    0,    0,    1e-9, 0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                  0,    0,    0,    0,    0,    1e-9, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                                  0,    0,    0,    0,    0,    0,    1e-9, 0,    0,    0,     0,     0,     0,    0,    0,
                                  0,    0,    0,    0,    0,    0,    0,    1e-9, 0,    0,     0,     0,     0,    0,    0,
                                  0,    0,    0,    0,    0,    0,    0,    0,    1e-9, 0,     0,     0,     0,    0,    0,
                                  0,    0,    0,    0,    0,    0,    0,    0,    0,    1e-9,  0,     0,     0,    0,    0,
                                  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1e-9,  0,     0,    0,    0,
                                  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1e-9,  0,    0,    0,
                                  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1e-9, 0,    0,
                                  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1e-9, 0,
                                  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1e-9]

    # ===== ODOMETRY INPUT (from wheel encoders) =====
    odom0: /odom
    odom0_config: [true,  true,  false,  # x, y, z position (USE - wheel encoders are primary position source)
                   false, false, true,   # roll, pitch, yaw orientation (USE yaw from bicycle kinematics) 
                   true,  true,  false,  # x_dot, y_dot, z_dot velocity (USE - wheel encoders accurate for velocity)
                   false, false, true,   # roll_dot, pitch_dot, yaw_dot (USE yaw_dot from bicycle model)
                   false, false, false] # x_ddot, y_ddot, z_ddot acceleration (let IMU handle acceleration)
    
    odom0_queue_size: 10
    odom0_nodelay: true                # Process immediately for low latency
    odom0_differential: false          # Use absolute measurements
    odom0_relative: false              # Wheel odometry provides absolute pose
    
    # ===== IMU INPUT (from inertial sensor) =====  
    imu0: /imu
    imu0_config: [false, false, false,   # x, y, z position (N/A for IMU)
                  false, false, false,   # roll, pitch, yaw orientation (Gazebo IMU may drift - disable for now)
                  false, false, false,   # x_dot, y_dot, z_dot velocity (N/A for IMU)
                  false, false, true,    # roll_dot, pitch_dot, yaw_dot (USE yaw_dot - angular velocity from gyro)
                  true,  true,  false]   # x_ddot, y_ddot, z_ddot acceleration (USE x,y - helps with dynamics)
                  
    imu0_queue_size: 10
    imu0_nodelay: true                 # Process immediately for low latency  
    imu0_differential: false           # Use absolute IMU measurements
    imu0_relative: true                # IMU provides relative measurements
    imu0_remove_gravitational_acceleration: true  # Remove gravity from accelerometer
    
    # IMU rejection thresholds (reject outlier data)
    imu0_linear_acceleration_rejection_threshold: 0.8  # Reject high accelerations
    imu0_angular_velocity_rejection_threshold: 1.57    # Reject high angular rates

    # ===== PROCESS NOISE COVARIANCE - Optimized for wheel odom + IMU fusion =====
    # Higher values = trust sensors less, lower = trust process model less
    # Reduced noise for wheel odometry-driven variables, moderate for IMU-assisted ones
    process_noise_covariance: [0.002, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,  # x (trust wheel odom)
                               0,    0.002, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,  # y (trust wheel odom)
                               0,    0,    0.01,  0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,  # z (not used)
                               0,    0,    0,    0.01,  0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,  # roll (not used)
                               0,    0,    0,    0,    0.01,  0,    0,     0,     0,    0,    0,    0,    0,    0,    0,  # pitch (not used)
                               0,    0,    0,    0,    0,    0.003, 0,     0,     0,    0,    0,    0,    0,    0,    0,  # yaw (bicycle model)
                               0,    0,    0,    0,    0,    0,    0.002, 0,     0,    0,    0,    0,    0,    0,    0,  # vx (trust wheel odom)
                               0,    0,    0,    0,    0,    0,    0,     0.0025, 0,    0,    0,    0,    0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0.004, 0,    0,    0,    0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,    0.001, 0,    0,    0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.001, 0,    0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.002, 0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.001, 0,    0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.001, 0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.0015]

    # Advanced EKF settings
    alpha: 0.001
    kappa: 0.0
    beta: 2.0
    use_control: false                 # Don't use control input
    stamped_control: false
    control_timeout: 0.2